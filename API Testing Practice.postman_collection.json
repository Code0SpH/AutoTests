{
	"info": {
		"_postman_id": "f53a3952-8ea8-453e-acfe-a65fe55c8203",
		"name": "API Testing Practice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29213041",
		"_collection_link": "https://test66-7531.postman.co/workspace/Postman-4-Beginners-~ae385fd4-df22-46c5-9f0f-84f87c510c11/collection/29213041-f53a3952-8ea8-453e-acfe-a65fe55c8203?action=share&source=collection_link&creator=29213041"
	},
	"item": [
		{
			"name": "Get User #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус-кода\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка ID пользователя\r",
							"pm.test(\"User ID is 1\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"// Проверка email\r",
							"pm.test(\"Email contains '@'\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.include('@');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус-кода\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка ID поста\r",
							"pm.test(\"Post ID is 1\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"// Проверка title\r",
							"pm.test(\"Title contains 'sunt'\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.include('sunt');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Todo #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус-кода\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка ID\r",
							"pm.test(\"Todo ID is 1\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"// Проверка title\r",
							"pm.test(\"Title is 'delectus aut autem'\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql('delectus aut autem');\r",
							"});\r",
							"\r",
							"// Проверка completed (для todos/1 оно всегда false!)\r",
							"pm.test(\"Completed is false\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.completed).to.eql(false); // Строгое сравнение с false\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Comment #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус-кода\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка ID поста\r",
							"pm.test(\"Post ID is 1\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Post name is id labore ex et quam laborum\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.include('id labore ex et quam laborum');\r",
							"});\r",
							"\r",
							"// Проверка title\r",
							"pm.test(\"Email contains '@'\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.include('@');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Album #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статус-кода\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка ID поста\r",
							"pm.test(\"Post ID is 1\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"// Проверка title\r",
							"pm.test(\"Title contains 'quidem molestiae enim'\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.include('quidem molestiae enim');\r",
							"});\r",
							"\r",
							"pm.test(\"Post userID is 1\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/albums/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"albums",
						"1"
					]
				}
			},
			"response": []
		}
	]
}